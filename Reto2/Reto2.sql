--------------EJERCICIO N1----------------

ALTER TABLE CLIENTES ADD NOM_CORT VARCHAR(30);

SELECT * FROM CLIENTES;


--------------EJERCICIO N2----------------
CREATE OR REPLACE PROCEDURE ACTUALIZAR_NOM_CORT
AS
BEGIN
  FOR cliente IN (SELECT COD_CLIE, VAL_APE1, VAL_NOM1 FROM CLIENTES) LOOP
    UPDATE CLIENTES
    SET NOM_CORT = cliente.VAL_NOM1 || ' ' || cliente.VAL_APE1
    WHERE COD_CLIE = cliente.COD_CLIE;
  END LOOP;
  COMMIT;
END;

EXECUTE ACTUALIZAR_NOM_CORT;


--------------EJERCICIO N3----------------
ALTER TABLE CLIENTES ADD EDAD INTEGER;

CREATE OR REPLACE PROCEDURE ACTUALIZAR_EDAD
AS
BEGIN
  FOR cliente IN (SELECT COD_CLIE, FEC_NACI FROM CLIENTES) LOOP
    UPDATE CLIENTES
    SET EDAD = EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM cliente.FEC_NACI)
    WHERE COD_CLIE = cliente.COD_CLIE;
  END LOOP;
  COMMIT;
END;

EXECUTE ACTUALIZAR_EDAD;


--------------EJERCICIO N4----------------
CREATE OR REPLACE PROCEDURE CALCULAR_MONTO_RECHAZADO
(
  p_COD_ZONA IN INTEGER := 1629,
  p_COD_SECC IN VARCHAR2 := 'K',
  p_MONTO_RECHAZADO OUT FLOAT
) AS
BEGIN
  SELECT SUM(VAL_MONT_SOLI)
  INTO p_MONTO_RECHAZADO
  FROM PEDIDOS
  WHERE VAL_ESTA_PEDI = 'RECHAZADO'
    AND COD_ZONA = p_COD_ZONA
    AND COD_SECC = p_COD_SECC;
    DBMS_OUTPUT.PUT_LINE('Monto rechazado: ' || p_MONTO_RECHAZADO);
END;

EXECUTE CALCULAR_MONTO_RECHAZADO;